@Configuration
@EnableWebSecurity
public class SecurityConfig {

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            .cors().and().csrf().disable()
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/", "/error", "/login**").permitAll()
                .anyRequest().authenticated()
            )
            .oauth2Login()
            .userInfoEndpoint()
            .userService(oAuth2UserService());

        return http.build();
    }

    @Bean
    public OAuth2UserService<OAuth2UserRequest, OAuth2User> oAuth2UserService() {
        return userRequest -> {
            OAuth2User oAuth2User = new DefaultOAuth2UserService().loadUser(userRequest);

            String email = oAuth2User.getAttribute("email");
            String name = oAuth2User.getAttribute("name");
            String picture = oAuth2User.getAttribute("picture");

            // Save to DB if not exist
            UserRepository userRepository = SpringContext.getBean(UserRepository.class);
            userRepository.findByEmail(email).orElseGet(() -> {
                User user = new User();
                user.setEmail(email);
                user.setName(name);
                user.setProfilePic(picture);
                return userRepository.save(user);
            });

            return oAuth2User;
        };
    }
}
